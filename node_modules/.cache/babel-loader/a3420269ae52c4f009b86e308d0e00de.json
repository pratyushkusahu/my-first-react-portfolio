{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pratyush\\\\repository\\\\NewreactFolder\\\\my-first-react-portfolio\\\\src\\\\pages\\\\splash\\\\Splash.js\";\nimport React, { Component } from \"react\";\nimport \"./Splash.css\";\nimport { Redirect } from \"react-router-dom\";\nimport LoaderLogo from \"../../components/Loader/LoaderLogo.js\";\n\nfunction AnimatedSplash(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo_wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"screen\",\n    style: {\n      backgroundColor: props.theme.splashBg\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LoaderLogo, {\n    id: \"logo\",\n    theme: props.theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  })));\n}\n\nclass Splash extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirect: false\n    };\n  }\n\n  componentDidMount() {\n    this.id = setTimeout(() => this.setState({\n      redirect: true\n    }), 5500);\n  }\n\n  componentWillMount() {\n    clearTimeout(this.id);\n  }\n\n  render() {\n    return this.state.redirect ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }) : /*#__PURE__*/React.createElement(AnimatedSplash, {\n      theme: this.props.theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default Splash;","map":{"version":3,"sources":["D:/Pratyush/repository/NewreactFolder/my-first-react-portfolio/src/pages/splash/Splash.js"],"names":["React","Component","Redirect","LoaderLogo","AnimatedSplash","props","backgroundColor","theme","splashBg","Splash","constructor","state","redirect","componentDidMount","id","setTimeout","setState","componentWillMount","clearTimeout","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,cAAP;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,UAAP,MAAuB,uCAAvB;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAED,KAAK,CAACE,KAAN,CAAYC;AAA/B,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAC,MAAf;AAAsB,IAAA,KAAK,EAAEH,KAAK,CAACE,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAOD;;AAED,MAAME,MAAN,SAAqBR,SAArB,CAA+B;AAC7BS,EAAAA,WAAW,CAACL,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKM,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,EAAL,GAAUC,UAAU,CAAC,MAAM,KAAKC,QAAL,CAAc;AAAEJ,MAAAA,QAAQ,EAAE;AAAZ,KAAd,CAAP,EAA0C,IAA1C,CAApB;AACD;;AAEDK,EAAAA,kBAAkB,GAAG;AACnBC,IAAAA,YAAY,CAAC,KAAKJ,EAAN,CAAZ;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKR,KAAL,CAAWC,QAAX,gBACL,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,gBAGL,oBAAC,cAAD;AAAgB,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWE,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF;AAKD;;AAtB4B;;AAyB/B,eAAeE,MAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Splash.css\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport LoaderLogo from \"../../components/Loader/LoaderLogo.js\";\r\n\r\nfunction AnimatedSplash(props) {\r\n  return (\r\n    <div className=\"logo_wrapper\">\r\n      <div className=\"screen\" style={{ backgroundColor: props.theme.splashBg }}>\r\n        <LoaderLogo id=\"logo\" theme={props.theme} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass Splash extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      redirect: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.id = setTimeout(() => this.setState({ redirect: true }), 5500);\r\n  }\r\n\r\n  componentWillMount() {\r\n    clearTimeout(this.id);\r\n  }\r\n\r\n  render() {\r\n    return this.state.redirect ? (\r\n      <Redirect to=\"/home\" />\r\n    ) : (\r\n      <AnimatedSplash theme={this.props.theme} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Splash;\r\n"]},"metadata":{},"sourceType":"module"}